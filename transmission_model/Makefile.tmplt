c_source :=
cpp_source :=

test_src :=

CXX = /usr/local/bin/mpicxx
CXXLD = /usr/local/bin/mpicxx
CC = clang

CXX_RELEASE_FLAGS = -Wall -O3 -g0 -std=c++11 -MMD -MP
CXX_DEBUG_FLAGS = -Wall -O0 -g3 -std=c++11 -MMD -MP

CXX_FLAGS = $(CXX_RELEASE_FLAGS)

INCLUDES :=
LIBS :=
RPATHS :=

R_HOME = /Library/Frameworks/R.framework/Versions/3.2/Resources
#R_USER_LIBS = ~/Library/R/3.2/library
R_USER_LIBS = /Library/Frameworks/R.framework/Versions/3.2/Resources/library

REPAST_LIB_DIR = /Users/nick/bin/repast_hpc/lib
REPAST_LIB = repast_hpc-2.1
REPAST_INCLUDE = /Users/nick/bin/repast_hpc/include

HDF5_INCLUDE = /usr/local/include
HDF5_LIB_DIR = /usr/local/lib
HDF5_LIBS = -l hdf5_cpp -l hdf5

BOOST_INCLUDE = /usr/local/include
BOOST_LIB_DIR = /usr/local/lib
BOOST_LIBS = -lboost_mpi-mt -lboost_system-mt -lboost_filesystem-mt -boost_serialization-mt

NET_CDF_LIB_DIR = 
NET_CDF_LIB =

INCLUDES += -I $(R_HOME)/include
INCLUDES += -I $(R_USER_LIBS)/RInside/include
INCLUDES += -I $(R_USER_LIBS)/Rcpp/include
INCLUDES += -I $(REPAST_INCLUDE)
INCLUDES += -I $(BOOST_INCLUDE)
INCLUDES += -I $(HDF5_INCLUDE)
INCLUDES += -I ../src

GTEST_HOME = /Users/nick/bin/googletest
GTEST_LIB = $(GTEST_HOME)/libgtest.a
TEST_INCLUDES = $(INCLUDES) -I $(GTEST_HOME)/include

LIBS += -L $(R_USER_LIBS)/RInside/lib -l RInside
LIBS += -L $(R_HOME)/lib -l R
LIBS += -L $(REPAST_LIB_DIR) -l$(REPAST_LIB)
LIBS += -L $(BOOST_LIB_DIR) $(BOOST_LIBS)
LIBS += -L $(HDF5_LIB_DIR) $(HDF5_LIBS)
LIBS += -L $(NET_CDF_LIB_DIR) -l$(NET_CDF_LIB)

RPATHS += -Wl,-rpath -Wl,$(R_USER_LIBS)/RInside/lib
RPATHS += -Wl,-rpath -Wl,$(R_HOME)/lib
RPATHS += -Wl,-rpath -Wl,$(BOOST_LIB_DIR)
RPATHS += -Wl,-rpath -Wl,$(REPAST_LIB_DIR)
RPATHS += -Wl,-rpath -Wl,$(NET_CDF_LIB_DIR)

SRC_DIR=../src
BUILD_DIR = ./build

include ../src/module.mk
include ../test/module.mk

# objects used by both executable and tests
OBJECTS :=
OBJECTS += $(subst .cpp,.o, $(addprefix $(BUILD_DIR)/, $(cpp_source)))
OBJECTS += $(subst .c,.o, $(addprefix $(BUILD_DIR)/, $(c_source)))

# objects and deps for executable
EXEC_OBJECTS := $(OBJECTS)
EXEC_OBJECTS += $(BUILD_DIR)/main.o

TEST_OBJECTS := $(OBJECTS)
TEST_OBJECTS += $(subst .cpp,.o, $(addprefix $(BUILD_DIR)/, $(test_src)))
TEST_OBJECTS += $(BUILD_DIR)/test_main.o

VPATH = ../src ../test

VERSION = 0.0
NAME = transmission_model-$(VERSION)
TEST_NAME = unit_tests

SED := sed
MV := mv -f

-include $(TEST_OBJECTS:.o=.d)
-include $(EXEC_OBJECTS:.o=.d)

.PHONY: all transmission_model tests clean

all: transmission_model tests

transmission_model : $(EXEC_DEPS) $(EXEC_OBJECTS)
	$(CXXLD) $(filter-out %.d, $^)  $(LIBS) $(RPATHS) -o $(NAME)
	
tests : $(TEST_DEPS) $(TEST_OBJECTS)
	$(CXXLD) $(filter-out %.d, $^) $(LIBS) $(RPATHS) $(GTEST_LIB) -o $(TEST_NAME)
	
$(BUILD_DIR)/%.o : %.cpp
	@-mkdir -p $(dir $@)
	$(CXX) $(CXX_FLAGS) $(INCLUDES) $(TEST_INCLUDES) -c $< -o $@
	

clean:
	rm -fv $(NAME) $(TEST_NAME)
	rm -rf $(BUILD_DIR)/*
