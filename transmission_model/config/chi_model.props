global.random.seed=42

#stop.at = 36500 # 100 years
#stop.at = 3650 # 10 years
stop.at = 7300 # 20 years

net.variable.name = nw
casual.net.variable.name = n_cas

r.parameters.non.derived = ../r/common/chi_params_nonderived.R
r.parameters.derived = ../r/common/chi_params_derived.R

r.file = ../r/network_model/transmission_model_tergmlite.R
initial.data.file = ../r/network_model/chi_net_n5000.RData

# if these properties are not commented out
# then these networks will replace existing ones
#main.network.file = ../r/network_model/main_network.RDS
#casual.network.file = ../r/network_model/casual_network.RDS

output.directory = ./output
per.tick.counts.output.file = counts.csv
#partnership.events.file = partnership_events.csv
#infection.events.file = infection_events.csv

#biomarker.log.file = biomarker_log.csv
biomarker.number.of.persons.to.log = 100

#death.events.file = exit_events.csv
#person.data.file = person_data.csv
#testing.events.file = testing_events.csv
#art.events.file = art_events.csv
#prep.events.file = prep_events.csv

#serodiscordant.prep.log.file = serodiscordant_log.csv
#default.prep.log.file = base_prep_log.csv
#network.prep.log.file = network_prep_log.csv
#random.selection.prep.log.file = random_selection_prep_log.csv

net.save.file = main_network.RDS
casual.net.save.file = casual_network.RDS

save.network.at = end
count.overlaps = true

output.age.range = 20-30,30-100
input.age.threshold = 26
